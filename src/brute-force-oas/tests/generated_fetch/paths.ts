/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */


export interface paths {
  "/login": {
    /** Log in a user */
    post: {
      /** Log in a user */
      requestBody?: {
        content: {
          "application/json": components["schemas"]["LoginBody"];
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["LoginResponse"];
          };
        };
        /** @description Unauthorized */
        401: never;
        /** @description Not found */
        404: never;
      };
    };
  };
  "/signup": {
    /** Sign up a new user */
    post: {
      /** Sign up a new user */
      requestBody?: {
        content: {
          "application/json": components["schemas"]["SignupBody"];
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["SignupResponse"];
          };
        };
        /** @description Bad request */
        400: never;
        /** @description Conflict */
        409: never;
      };
    };
  };
  "/tools": {
    /** Find tools */
    get: {
      /** Find tools */
      parameters: {
          /** @description Filter by tag */
        query: {
          tag?: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["FindManyToolsResponse"];
          };
        };
      };
    };
    /** Create a tool */
    post: {
      /** Create a tool */
      requestBody?: {
        content: {
          "application/json": components["schemas"]["CreateToolBody"];
        };
      };
      responses: {
        /** @description Created */
        201: {
          content: {
            "application/json": components["schemas"]["CreateToolResponse"];
          };
        };
      };
    };
  };
  "/tools/{id}": {
    /** Delete a tool */
    delete: {
      /** Delete a tool */
      parameters: {
        path: {
          id: string;
        };
      };
      responses: {
        /** @description OK */
        200: never;
      };
    };
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    LoginBody: {
      email: string;
      password: string;
    };
    LoginResponse: {
      token: string;
    };
    SignupBody: {
      email: string;
      password: string;
    };
    SignupResponse: {
      token: string;
    };
    FindManyToolsQueryParams: {
      tag?: string;
    };
    ToolType: {
      id: string;
      name: string;
      description?: string;
      link: string;
      tags: (string)[];
    };
    CreateToolBody: {
      name: string;
      description?: string;
      link: string;
      tags: (string)[];
    };
    CreateToolResponse: {
      tool: components["schemas"]["ToolType"];
    };
    FindManyToolsResponse: {
      tools: (components["schemas"]["ToolType"])[];
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type external = Record<string, never>;

export type operations = Record<string, never>;
