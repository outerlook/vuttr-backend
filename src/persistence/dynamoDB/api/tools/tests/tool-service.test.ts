import { beforeAll, describe, expect, test } from "vitest";
import { toolsService } from "src/persistence/dynamoDB/api/tools/index";
import path from "path";
import { config } from "dotenv";
import { ddbEntities } from "src/persistence/dynamoDB/schema/entities";
import { EntityRecord } from "electrodb";
import produce from "immer";

const setupTestEnvs = () => {
  // create a .env.test file with necessary envs for this test
  config({ path: path.resolve(__dirname, ".env.test") });
};

const baseTool = {
  createdBy: "test-user",
  title: "test-title",
  link: "test-link",
  description: "test-description",
  tags: ["test"],
} satisfies Omit<EntityRecord<typeof ddbEntities.Tool>, "id">;

describe("ToolService", () => {
  setupTestEnvs();
  test("create", async () => {
    // add some tags to the baseTool
    const tool = produce(baseTool, (draft) => {
      draft.tags.push("test-tag");
      return draft;
    });
    const result = await toolsService.create(tool);

    // id is generated by nanoid, so we can't compare it
    result.data.id = "ANY_ID";

    expect(result).toMatchInlineSnapshot(`
      {
        "data": {
          "createdBy": "test-user",
          "description": "test-description",
          "id": "ANY_ID",
          "link": "test-link",
          "tags": [
            "test",
            "test-tag",
          ],
          "title": "test-title",
        },
      }
    `);
  });

  describe("findMany", () => {
    const produceWithDifferentTag = (...tags: string[]) =>
      produce(baseTool, (draft) => {
        draft.tags.push(...tags);
        return draft;
      });

    const allTools = [
      produceWithDifferentTag("test-tag"),
      produceWithDifferentTag("test-tag", "test-tag-2"),
      produceWithDifferentTag("test-tag", "test-tag-3"),
    ].map((tool) => ({ ...tool, id: "ANY_ID" }));

    beforeAll(async () => {
      await Promise.all(
        allTools.map(async (tool) => {
          await toolsService.create(tool);
        })
      );
    });

    test("Without tag", async () => {
      const result = await toolsService.findMany();
      expect(result).toMatchInlineSnapshot(`
        {
          "cursor": null,
          "data": [
            {
              "createdBy": "test-user",
              "description": "test-description",
              "id": "HNd2Z6xA49aANluMzp5sq",
              "link": "test-link",
              "tags": [
                "test-tag",
              ],
              "title": "test-title",
            },
            {
              "createdBy": "test-user",
              "description": "test-description",
              "id": "tQrsmPe9-0MIJBnpjzh-a",
              "link": "test-link",
              "tags": [
                "test",
                "test-tag",
              ],
              "title": "test-title",
            },
            {
              "createdBy": "test-user",
              "description": "test-description",
              "id": "ujtn35CyL3huZBFtfYcvk",
              "link": "test-link",
              "tags": [
                "test-tag",
              ],
              "title": "test-title",
            },
            {
              "createdBy": "test-user",
              "description": "test-description",
              "id": "Q7wMUe_SCWoyB_5lfgpJY",
              "link": "test-link",
              "tags": [
                "test",
              ],
              "title": "test-title",
            },
            {
              "createdBy": "test-user",
              "description": "test-description",
              "id": "ZccxadvazcgPLjIPNqxL1",
              "link": "test-link",
              "tags": [
                "test",
                "test-tag",
              ],
              "title": "test-title",
            },
            {
              "createdBy": "test-user",
              "description": "test-description",
              "id": "9eCOJqZPpe-RZRwu01g-T",
              "link": "test-link",
              "tags": [
                "test-tag",
              ],
              "title": "test-title",
            },
            {
              "createdBy": "test-user",
              "description": "test-description",
              "id": "_HgzCNSxCfGlWtim2tHXJ",
              "link": "test-link",
              "tags": [
                "test",
              ],
              "title": "test-title",
            },
            {
              "createdBy": "test-user",
              "description": "test-description",
              "id": "hoCt14JsMF1N91Z_WMicD",
              "link": "test-link",
              "tags": [
                "test",
                "test-tag",
                "test-tag-2",
              ],
              "title": "test-title",
            },
            {
              "createdBy": "test-user",
              "description": "test-description",
              "id": "Uhi90C7w3GyDI8eSy2KVG",
              "link": "test-link",
              "tags": [
                "test",
                "test-tag",
                "test-tag-3",
              ],
              "title": "test-title",
            },
          ],
        }
      `);
    });

    test("With tag", async () => {
      const result = await toolsService.findMany({ tag: "test-tag" });
      expect(result).toMatchInlineSnapshot(`
        {
          "cursor": null,
          "data": [],
        }
      `);

      const result2 = await toolsService.findMany({ tag: "test-tag-2" });
      expect(result2).toMatchInlineSnapshot(`
        {
          "cursor": null,
          "data": [],
        }
      `);
    })
  });
});
